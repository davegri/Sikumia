$col_number: 24;
$gutter_percent: 1%;

$one_col_width: (100 - $gutter_percent * ($col_number - 1)) / $col_number;

@mixin cols($num) {
    width: $one_col_width * $num + $gutter_percent * ($num - 1);
}

@mixin sub_cols($num_child, $num_parent) {
    $parent_size: $one_col_width * $num_parent + $gutter_percent * ($num_parent - 1);
    $child_size: $one_col_width * $num_child + $gutter_percent * ($num_child - 1);

    margin-right: $gutter_percent / $parent_size * 100%;
    width: $child_size / $parent_size * 100%;
}


@mixin part_of($num, $gutter_percent: $gutter_percent){
        margin-right: $gutter_percent;
        float: right;
        width: (100 - $gutter_percent * ($num - 1)) / $num;
        &:nth-of-type(#{$num}n+1){
        margin-right: 0;
        }
        &:nth-of-type(n+#{($num+1)}){
        margin-top:$gutter_percent;
        }
}

.row {
    @for $i from 1 through $col_number {
        .col-#{$i} {
            float: right;
            margin-right: $gutter_percent;

            @include cols($i);

            @for $j from 1 through $i - 1 {
                .col-#{$j} {
                    @include sub_cols($j, $i);
                }
            }
        }
    }

    > :first-child,
    .row > :first-child {
        margin-right: 0;
    }
}


@for $i from 1 through 12 {
    .part-of-#{$i} {
        @include part_of($i);
    }
}




.row:after {
    clear: both;
    content: ".";
    display: block;
    height: 0;
    visibility: hidden;
}